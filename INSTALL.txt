=====================
Installing Whitetrash
=====================

Checkout the code:

  svn co https://whitetrash.svn.sourceforge.net/svnroot/whitetrash/trunk whitetrash

The packages you will need (this is an Ubuntu/debian command line, but other distros will be similar) are:

sudo apt-get install \
squid \
python2.4-dev \
python2.4-mysqldb \
python-pyopenssl \
mysql-server

If you would like to enable the CAPTCHA (http://en.wikipedia.org/wiki/Captcha) test for whitelist additions, you will need to install PyCAPTCHA: http://cheeseshop.python.org/pypi/PyCAPTCHA/0.4 and the python-imaging package (PIL).

Change the default password in db_setup.

Create and populate a database called 'whitetrash'. If this is a new mysql install, please set a root password::

  mysqladmin -u root password NEWPASSWORD

In mysql::
    
    mysql -u root -p
    create database whitetrash;
    use whitetrash;
    source db_setup.mysql;
    quit

Create a whitetrash linux user::
   
    sudo adduser --shell /bin/false --no-create-home --disabled-password --disabled-login whitetrash

Create logs::

    sudo touch /var/log/whitetrash.log
    sudo chown whitetrash:root /var/log/whitetrash.log

This will install the whitetrash python files into /usr/bin, init script into /etc/init.d, and whitetrash.conf into /etc::

    sudo python setup.py install

If you intend to whitelist SSL you will need a certificate.  You can use the line below to create one, or buy one from a CA (this is better because then it will be automatically trusted by users).  The code expects the cert to be in /etc/server.pem.  The common name should be the same as whatever whitetrash_add_domain is set to in whitetrash.conf (default is whitetrash) :

    openssl req -new -x509 -keyout /etc/server.pem -out /etc/server.pem -days 365 -nodes

The whitetrash server process is started with the init script::

    sudo /etc/init.d/whitetrash start

For testing/debug purposes you can run it directly from the commandline as a regular user::

    python whitetrash_serv

/etc/whitetrash.conf
~~~~~~~~~~~~~~~~~~~~

Edit /etc/whitetrash.conf to perform the necessary customisations.  The essential things you should change are:

- stylesheet_server. If you use my stylesheet, the graphics are available from whitetrash.sf.net.
- proxy_secret
- database_password

Optional
~~~~~~~~

In ubuntu you can make sure this server gets started in the default runlevels by::

    sudo update-rc.d whitetrash defaults


============
Squid Config
============

You will want to add the following lines to your squid.conf

Cache Peers
~~~~~~~~~~~

Need to do this to get the username passed to our whitetrash listener:

    cache_peer whitetrash parent 8000 0 no-query no-digest login=*:secretpassword 

Our upstream parent (if any).  If you don't have to go through an upstream proxy you don't need this line.

    cache_peer 10.10.10.254 parent 3128 0 no-query no-digest

Domains
~~~~~~~

This tells squid to send requests for the whitetrash domain to the whitetrash cache_peer as above::
    
    cache_peer_domain whitetrash whitetrash

I have the whitetrash domains in /etc/hosts pointing to localhost like:
    
    127.0.0.1       localhost whitetrash

You can do the same or use real DNS entries.  If you do the latter you don't need this line::

    hosts_file /etc/hosts

Redirector
~~~~~~~~~~

This is the most important line - tell squid about our redirector.  This seems to have been renamed "url_rewrite_program" in newer versions of squid.
  
  redirect_program /usr/bin/whitetrash.py

There is a new option called url_rewrite_concurrency which you can set if your redirector is multithreaded.  At the moment mine is not, but this might be something I look at in the future.

Authentication
~~~~~~~~~~~~~~

You need to turn on authentication. You can use any of the default squid authentication schemes (basic, digest, ntlm) by uncommenting the relevant lines in squid.conf, or write your own squid authenticator.

Access Controls
~~~~~~~~~~~~~~~

Force authentication:

    acl password proxy_auth REQUIRED
    http_access deny !password

Allow the domains that manage the whitelist for us:

    acl cgi_server dstdomain whitetrash
    http_access allow cgi_server

If you have an upstream cache parent you want traffic to go through, you should use never_direct for all.  This means it will always use a cache parent and never try to contact the server itself.

    never_direct allow all

If your whitetrash box is the last thing between you and the internet you will want it to go and get all the requests for you.  The stuff for the whitelist will still need to go through our cache peer however, so use:

    never_direct allow cgi_server


This is important to protect webservers (such as whitetrash_serv) listening on localhost:

    acl to_localhost dst 127.0.0.0/8
    http_access deny to_localhost

Let the redirector handle everything else:

    http_access allow all

Send everything we don't trust to the redirector to be compared against the whitelist.
Renamed "url_rewrite_access" in new versions of squid.

    redirector_access allow !cgi_server 

Performance
~~~~~~~~~~~

MySQL
-----

If you have a lot of users, you will want to look at tweaking your mysql install, in particular the max number of connections (100 by default).  Set max_connections in my.cnf or test on the commandline temporarily like this::

  set global max_connections=200;

You should probably allocate mysql some more system resources, as the defaults are fairly conservative.  See mysql.com for guidance.

System
------

If you have a lot of users, you will have to make the standard system modifications to allow squid to consume lots of system resources::

    echo 8192 > /proc/sys/fs/file-max

Edit /etc/init.d/squid and put this at the very start::

    ulimit -HSn 8192

Edit /etc/default/squid (this is probably ubuntu/debian specific, you might find it in /etc/squid/squid.conf)::

    SQUID_MAXFD=8192

By default squid will fire up 5 instances of the redirector, you can change this, and if you have many users you will need a lot more.  Note that if you make this a large number you will probably want to increase the maximum number of mysql connections your mysql server will allow (100 by default).  You probably want lots of redirector processes in squid.conf::

    redirect_children 100

You may get complaints about too many connections being tracked, so::

    # This tell you how many sessions arte open right now.
    cat /proc/net/ip_conntrack | wc -l

    # This tells you the maximum number of conntrack entries you can have in total
    cat /proc/sys/net/ipv4/ip_conntrack_max

    echo 70000 > /proc/sys/net/ipv4/ip_conntrack_max

Edit /usr/include/bits/typesizes.h::

    #define _FD_SETSIZE            8192

And finally recompile::

    ./configure --with-maxfd=8192

Unfortunately despite doing all of this, I couldn't get squid to use more than 4096 file descriptors!  Look at syslog for any errors and warnings.

Whitetrash
----------

I have allowed the adding domain to be separated from the viewing/deleting domain.  The idea behind this is that if you think viewing/deleting actions are slowing down the main server, you can move it to a different machine.  You will have to configure DNS, allow MySQL connection over the network, and add the new domain into the squid.conf where you only had "whitetrash" before.

There are plenty of other ways the install could be tweaked if there are any performance issues.  Send me an email if you have any questions.

==========
The result
==========

netstat -plant should show you the following listeners:

- whitetrash_serv    127.0.0.1:8000
- mysqld             127.0.0.1:3306
- squid              0.0.0.0:3128

====================
In progress - django
====================

To use the django code:

 - Copy the apache static files: cp -r example_configs/apache2/www/whitetrash /var/www/
 - Copy the whitetrash apache config: cp example_configs/apache2/whiterash /etc/apache/sites-available/
 - Enable the whitetrash site: a2ensite whitetrash
 - Create ssl cert and enable apache ssl module
 - Create a symlink: ln -s /usr/share/python-support/python-django/django/contrib/admin/media/ /var/www/whitetrash/media
